image: gafsel/java-postgres-build

pipelines:
  default:
    - step:
        script:
          - git config --global user.name "$GIT_USER"
          - git config --global user.email "$GIT_EMAIL"
          - apt-get update && apt-get install -y sshpass # && apt-get install -y npm
          - npm install --global bower
          - echo "*:*:$PGUSER:$PGPASS:calvinista" > ~/.pgpass
          - chmod 600 ~/.pgpass
          - psql -h "$PGHOST" -U "$PGUSER" -d calvinista -t -A -c 'select chave_igreja, nome from tb_igreja where status = 0' > igrejas.txt
          - cat igrejas.txt
          - echo '#!/bin/bash\n' > deploy.sh
          - echo 'mvn package -Pprod -Dchave.igreja=$1 -Dnome.igreja="$2"\n' >> deploy.sh
          - echo 'sshpass -p "$DEPLOY_PASS" scp -o StrictHostKeyChecking=no "target/$1.war" "$DEPLOY_USER@$DEPLOY_HOST:/tmp/"\n' >> deploy.sh
          - echo 'sshpass -p "$DEPLOY_PASS" ssh -o StrictHostKeyChecking=no "$DEPLOY_USER@$DEPLOY_HOST" "/opt/glassfish4/glassfish/bin/asadmin undeploy $1" || echo "$1 não estava em execução" \n' >> deploy.sh
          - echo 'sshpass -p "$DEPLOY_PASS" ssh -o StrictHostKeyChecking=no "$DEPLOY_USER@$DEPLOY_HOST" "/opt/glassfish4/glassfish/bin/asadmin deploy /tmp/$1.war" \n' >> deploy.sh
          - chmod u+x deploy.sh
          - awk -F'|' '{system("./deploy.sh" $1 " " $2)}' igrejas.txt